[tool.poetry]
name = "bcdi"
version = "0"
keywords = ["BCDI", "Bragg coherent X-ray diffraction imaging"]
description = "BCDI: tools for pre(post)-processing Bragg and forward coherent X-ray diffraction imaging data"
authors = ["Jerome Carnis <carnis_jerome@yahoo.fr>"]
maintainers = ["Jerome Carnis <carnis_jerome@yahoo.fr>"]
readme = "PyPI.md"
license = "CeCILL-B"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: CeCILL-B Free Software License Agreement (CECILL-B)",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Operating System :: OS Independent",
]
repository = "https://github.com/carnisj/bcdi"
documentation = "https://bcdi.readthedocs.io/en/latest/"
include = [
    { path = "tests", format = "sdist" },
    { path = "scripts", format = ["sdist", "wheel"]  },
    { path = ".github", format = "sdist" },
    { path = ".gitignore", format = "sdist" },
    { path = "dodo.py", format = "sdist" },
    { path = ".deepsource.toml", format = "sdist" },
    { path = ".isort.cfg", format = "sdist" },
    { path = "readthedocs.yml", format = "sdist" },
    { path = "mypy.ini", format = "sdist" },
    { path = "diffract.png", format = "sdist" },
    { path = "CITATION.cff", format = "sdist" },
    { path = "doc", format = "sdist" },
    { path = "*.md", format = "sdist" },
    { path = "*.rst", format = "sdist" },
    { path = "*.txt", format = "sdist" },
]

[tool.poetry.scripts]
bcdi_preprocess = 'scripts.preprocessing.bcdi_preprocess:main'
bcdi_strain = 'scripts.postprocessing.bcdi_strain:main'

[tool.poetry-version-plugin]
source = "init"

[tool.poetry.dependencies]
python = ">=3.9, <3.12"
wheel = "0.42.0"
xrayutilities = "1.7.6"
vtk = "9.3.0"
h5py = "3.10.0"
colorcet = "3.0.1"
fabio = "2023.10.0"
hdf5plugin = "4.3.0"
ipywidgets = "8.1.1"
lmfit = "1.2.2"
matplotlib = "3.8.2"
moviepy = "1.0.3"
numpy = "1.26.3"
pandas = "2.1.4"
pillow = "10.2.0"
pyyaml = "6.0.1"
scikit-image = "0.22.0"
scipy = "1.11.4"
silx = "1.1.2"
tables = "3.9.2"

# development dependencies
black = "24.3.0"
coverage = "7.4.0"
doit = "0.36.0"
isort = "5.13.2"
mypy = "1.8.0"
pydocstyle = "6.3.0"
pyfakefs = "5.3.2"
pytest = "7.4.4"
ruff = "0.1.14"
sphinx = "7.2.6"
sphinxcontrib-mermaid = "0.9.2"
twine = "4.0.2"

[tool.poetry.group.pyqt.dependencies]
pyqt5 = "5.15.10"

[tool.poetry.extras]
dev = [
    "black",
    "coverage",
    "pycodestyle",
    "pydocstyle",
    "pyfakefs",
    "pytest",
    "ruff",
    "sphinx",
    "sphinxcontrib-mermaid",
    "twine",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
plugins = "numpy.typing.mypy_plugin"

# Per-module options
[[tool.mypy.overrides]]
module = [
    "colorcet",
    "coverage",
    "lmfit",
    "mpl_toolkits.*",
    "matplotlib.*",
    "scipy.*",
    "vtk.*",
    "h5py",
    "PIL",
    "skimage.*",
    "fabio",
    "hdf5plugin",
    "xrayutilities",
    "silx.*",
    "tables",
    "ipywidgets",
    "pandas",
    "pyfakefs",
    "yaml",
]
ignore_missing_imports = true

[tool.ruff.lint]
extend-select = [
  "UP",  # pyupgrade
  "E",  # pycodestyle
  "W",  # pycodestyle
]