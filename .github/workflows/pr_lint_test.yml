# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: pr_lint_test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, '3.11']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python location
      run: | 
        python_path=$(which python  2>&1)
        echo "Python path: $python_path"
        site_packages="Site packages path: $( cd "$(dirname "$(dirname "$python_path")")"/lib/python${{ matrix.python-version }}/site-packages ; pwd -P )"
        echo $site_packages

    - name: Cache dependencies
      id: myCache
      uses: actions/cache@v2
      with:
        path: ${{env.LD_LIBRARY_PATH}}/python${{ matrix.python-version }}/site-packages
        key: ${{ runner.os }}-pip-v0-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      if: steps.myCache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        python -m pip install bcdi[dev]

    - name: Format the code with black
      run: python -m black bcdi --check

    - name: Check imports with isort
      run: python -m isort --profile black bcdi

    - name: Lint with pycodestyle
      run: python -m pycodestyle bcdi --max-line-length=88  --ignore=E24,E121,E123,E126,E203,E226,E704,W503

    - name: Check docstrings with pydocstyle
      run: python -m pydocstyle bcdi --ignore=D102,D107,D212,D203

    - name: Type check with mypy
      run: python -m mypy bcdi

#     - name: Install the package
#      run: python -m pip install -e .

    - name: Test with pytest
      run: python -m pytest
